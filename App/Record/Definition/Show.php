<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?string $airDate MySQL type date
 * @property int $episode MySQL type integer
 * @property string $notes MySQL type varchar(255)
 * @property int $repeat MySQL type integer
 * @property int $season MySQL type integer
 * @property ?int $showId MySQL type integer
 * @property \App\Record\Show $show related record
 */
abstract class Show extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = false;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['showId', ];

	protected static string $table = 'show';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'airDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, null, ),
				'episode' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, 0, ),
				'notes' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, false, '', ),
				'repeat' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, 0, ),
				'season' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, 0, ),
				'showId' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, ),
			];
			}

		return $this;
		}
	}
